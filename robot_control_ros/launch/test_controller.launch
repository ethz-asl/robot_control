<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!-- Gazebo simulation -->
  <arg name="simulation"  default="false" />
  <arg name="paused"      default="true" />
  <group if="$(arg simulation)">
    <include file="$(find robot_control_ros)/launch/gazebo.launch">
      <arg name="run_gui"   value="false" />
      <arg name="paused"    value="$(arg paused)" />
    </include>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
      <param name="publish_frequency" value="100"/>
      <param name="use_tf_static"     value="true"/>
      <remap from="robot_description" to="/robot_description"/>
      <remap from="joint_states"      to="/joint_states"/>
    </node>

    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/"
      args="joint_state_controller task_space_controller_sim" />

    <node name="unpause_gazebo_node" pkg="robot_control_ros" type="unpause_gazebo.py" output="screen"
          args="--delay 5.0" />

    <include file="$(find robot_control_ros)/launch/gui.launch"/>
  </group>

  <!--  Controllers -->
  <rosparam file="$(find robot_control_ros)/params/controllers.yaml" command="load"/>

  <!--    Interactive marker to command the end effector-->
  <node name="interactive_marker_node" pkg="robot_control_ros" type="interactive_marker.py" output="screen">
    <param name="subscribe_initial_pose"  value="true"/>
    <param name="initial_pose_topic"      value="/current_pose"/>
    <param name="frame_id"                value="world"/>
    <param name="target_pose_topic"       value="/target_pose"/>
  </node>

  <!--  Real robot-->
  <group unless="$(arg simulation)">
    <arg name="description_file"            default="$(find robot_control_assets)/assets/arms/panda/panda.urdf.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro.py $(arg description_file) mesh_prefix:=package://robot_control_assets/"/>

    <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
      <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml" />
      <param name="robot_ip" value="$(arg robot_ip)" />
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
      <param name="publish_frequency" value="100"/>
      <param name="use_tf_static"     value="true"/>
      <remap from="robot_description" to="/robot_description"/>
      <remap from="joint_states"      to="/franka_state_controller/joint_states"/>
    </node>
    <node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
          args="franka_state_controller"/>
    <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml" />
  </group>

</launch>
